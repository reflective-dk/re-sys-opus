---
id: 2ab5d5ce-c19c-4200-9679-221e86c74e1b
registrations:
  - validity:
      - input:
          class: { id: efefe41d-805b-478f-8e4d-841085cb7dfa, name: Type Map }
          name: Opus Employee -> RO Job Title
          sourceType: { id: 16eeb8d9-b2f7-486c-96a5-2a75d4ea983d, name: Opus Employee }
          targetType: { id: add5e887-841f-4f36-bb7e-0676d67c494f, name: Job Title }
          idSeed: position
          transform:
            # Replace whitespace and punctuation to coerce job title variations
            # into the same object
            - type: replace
              useRegex: true
              searchValue: '[\s.,;:-]+'
              newValue: ' '
            - type: titlify
          condition:
            type: mustNotProduceValue
            mapping: excludeFromAdministrative
          mappings:
            excludeFromAdministrative:
              sourceAttribute:
                type: path
                path: [ employedAt, notAdministrativeUnit ]
              targetAttribute: excludeFromAdministrative
            name:
              sourceAttribute: position
              targetAttribute: name
              transform:
                # Replace whitespace and punctuation to coerce job title
                # variations into the same object
                - type: replace
                  useRegex: true
                  searchValue: '[\s.,;:]+'
                  newValue: ' '
                - type: titlify
            shortName:
              sourceAttribute: positionShort
              targetAttribute: shortName
              transform:
                # Replace whitespace and punctuation to coerce job title
                # variations into the same object
                - type: replace
                  useRegex: true
                  searchValue: '[\s.,;:]+'
                  newValue: ' '
                - type: titlify
            nameAlias:
              sourceAttribute: position
              targetAttribute: aliases.$
              transform:
                # Remove '.' because value is also used as key (avoid nesting)
                type: replace
                useRegex: true
                searchValue: '\.+'
                newValue: ' '
            shortNameAlias:
              sourceAttribute: positionShort
              targetAttribute: aliases.$
              transform:
                # Remove '.' because value is also used as key (avoid nesting)
                type: replace
                useRegex: true
                searchValue: '\.+'
                newValue: ' '
        from: 2018-01-01T00:00:00.000Z
...
